package: org.robovm.apple.localauthentication
include: [foundation.yaml]
library: LocalAuthentication
framework: LocalAuthentication
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/LocalAuthentication.framework/Headers/LocalAuthentication.h
    - /System/Library/Frameworks/LocalAuthentication.framework/Headers/LAPublicDefines.h
typedefs:
    'void (^)(BOOL, NSError *)': '@Block VoidBlock2<Boolean, NSError>'
    
enums:
    LAPolicy: { prefix: LAPolicy }
    LAErrorCode: { first: LAErrorAuthenticationFailed }
        
classes:
    LocalAuthentication:
        annotations: ['@Marshaler(NSString.AsStringMarshaler.class)']
        

    LAError:
        extends: NSError
        
        
    LAContext: # DONE
        methods:
            '-canEvaluatePolicy:error:':
                trim_after_first_colon: true
                visibility: protected # throws NSErrorException
            '-evaluatePolicy:localizedReason:reply:':
                trim_after_first_colon: true
protocols: {}

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (LA.*):
        class: LocalAuthentication
        name: 'Function__#{g[0]}'

values:
    LAErrorDomain:
        class: LAError
        name: getClassDomain
   
    # Make sure we don't miss any values if new ones are introduced in a later version
    (LA.*):
        class: LocalAuthentication
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (LA.*):
        class: LocalAuthentication
        name: 'Constant__#{g[0]}'
